#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the FluentMappingGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using TelerikMvcApp4;
using Telerik.OpenAccess.Metadata.Relational;

namespace TelerikMvcApp4
{

	public partial class CarsDbMetadataSource : FluentMetadataSource
	{
		
		protected override IList<MappingConfiguration> PrepareMapping()
		{
			List<MappingConfiguration> mappingConfigurations = new List<MappingConfiguration>();
			
			MappingConfiguration<Car> carConfiguration = this.GetCarMappingConfiguration();
			mappingConfigurations.Add(carConfiguration);
			
			return mappingConfigurations;
		}
		
		protected override void SetContainerSettings(MetadataContainer container)
		{
			container.Name = "CarsDb";
			container.DefaultNamespace = "TelerikMvcApp4";
			container.NameGenerator.SourceStrategy = Telerik.OpenAccess.Metadata.NamingSourceStrategy.Property;
			container.NameGenerator.RemoveCamelCase = false;
		}
		public MappingConfiguration<Car> GetCarMappingConfiguration()
		{
			MappingConfiguration<Car> configuration = this.GetCarClassConfiguration();
			this.PrepareCarPropertyConfigurations(configuration);

			return configuration;
		}

		public MappingConfiguration<Car> GetCarClassConfiguration()
		{
			MappingConfiguration<Car> configuration = new MappingConfiguration<Car>();
			configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Cars");
	
			return configuration;
		}
	
		public void PrepareCarPropertyConfigurations(MappingConfiguration<Car> configuration)
		{
			configuration.HasProperty(x => x.Id).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_id").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Id").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Name").IsNotNullable().HasColumnType("nvarchar").HasLength(50);
			configuration.HasProperty(x => x.Sold).HasFieldName("_sold").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Sold").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
			configuration.HasProperty(x => x.Price).HasFieldName("_price").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Price").IsNotNullable().HasColumnType("decimal").HasPrecision(18).HasScale(2);
		}
	}
}
#pragma warning restore 1591
